const { assert } = require("@vue/compiler-core");

Feature('Testing Challenges.org Testing automatization');

Scenario('Complition 18 test cases: ', async ({ I }) => {

// –ü–æ–¥–≥–æ—Ç–æ–≤–ª–∏–≤–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    
    // –ú–∞—Å—Å–∏–≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
    let testsDataArray = [
        'Smith',                                // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç
        ' Smith',                               // –ü—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º
        'Smith ',                               // –ü—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ –∏–º–µ–Ω–∏
        'Smith Wesson',                         // 2 —Å–ª–æ–≤–∞ (–ø—Ä–æ–±–µ–ª –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ)
        'S',                                    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å–∏–º–≤–æ–ª–æ–≤
        ' ',                                    // –ü—Ä–æ–±–µ–ª
        '',                                     // –ù–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–¥–µ–Ω–æ 
        '<img src="logo.png">',                  // HTML-—Ç–µ–≥
        'üëç',                                   // Non ASCII
        '–ö–∏—Ä–∏–ª–ª',                               // –ö–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
        '@!_',                                  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        'SmithAndWessonCorporationProduct',     // 32 —Å–∏–º–≤–æ–ª–∞
        'SmithAndWessonCorporationAgent',       // 30 —Å–∏–º–≤–æ–ª–æ–≤
        "'SQL-injection'",                      // SQL-–∏–Ω—ä–µ–∫—Ü–∏—è
        '<script>alert("Aaaaaa!")</script>',    // XSS-–∞—Ç–∞–∫–∞
                                                // –°—é–¥–∞ –¥–æ–±–∞–≤–∏—Ç—Å—è –∫–æ–¥ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                                                // –°—é–¥–∞ –¥–æ–±–∞–≤–∏—Ç—Å—è –∫–æ–¥ –∏–∑ Cookie
                                                // –°—é–¥–∞ –¥–æ–±–∞–≤–∏—Ç—Å—è –∏–º—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–≥–æ CSS
    ];

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –ø–æ–ø–∞–ª–∏ –Ω–∞ –Ω–µ—ë:
        I.amOnPage('http://testingchallenges.thetestingmap.org/index.php');
        I.seeTitleEquals('Testing Challenges');

    // –û–±—ä—è–≤–ª—è–µ–º "–±—ã—Å—Ç—Ä—ã–µ" –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
        let input = 'input[id="firstname"]';
        let enter = async function(){I.click('input[type="submit"]')};

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è, –ª–æ–≥–∞ –∏ cookie-—Å–∞:
        await grabCommentCode();
        await grabCookieValue();
        await grabInputFromLogs();
// –í—ã–ø–æ–ª–Ω—è–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Å–∫—Ä–∏–ø—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ç—Ç—Ä–∏–±—É—Ç–∞ —Å–∫—Ä—ã—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ input:
    I.executeScript(userAsAdmin);

//  –°—á—ë—Ç—á–∏–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–µ—Ñ—Ñ–µ–∫—Ç–æ–≤ –æ–±–Ω—É–ª—è–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
//  –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å—á—ë—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω—É–ª–µ–Ω:
    I.seeTextEquals('0', 'span[class="values-tested"]');
    
// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ—Å—Ç-—Ñ—É–Ω–∫—Ü–∏—é
    await start();

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–Ω–µ–µ –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:
    async function start(){
        for (value of testsDataArray) {
            I.fillField(input, value); enter()
        }
    }

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—á—ë—Ç—á–∏–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–µ—Ñ—Ñ–µ–∫—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ 18:
    I.seeTextEquals('18', 'span[class="values-tested"]');

    // –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è Cookie-—Å–∞:
    async function grabCookieValue() {
        let cookie = await I.grabCookie('TestingChallenge');
        let cookieSTR = JSON.stringify(cookie).slice(77, 96);
        console.log('–ö–æ–¥ –∏–∑ Cookie: ', cookieSTR);
        testsDataArray.push(cookieSTR);
    }

    // –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ css-—Ñ–∞–π–ª–∞ –∏–∑ –ª–æ–≥–æ–≤:
    async function grabInputFromLogs() {
        let allLogs = await I.grabBrowserLogs()
        allLogs = JSON.stringify(allLogs);
        
        if (allLogs.includes('Failed to load resource') && allLogs.includes('.css')){
            let pos = allLogs.indexOf('.css')+4;
            
            allLogs = allLogs.slice(pos-100,pos);
            
            let missingCSS = allLogs.split('/');
            missingCSS = missingCSS[missingCSS.length-1];
            testsDataArray.push(missingCSS);
        } else {
            console.log('No CSS missing');
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:
    async function grabCommentCode() {
        let pageSource = await I.grabSource();
        let comment = pageSource.split(' ').slice(-150);
        comment = comment[comment.length-1];
        comment = comment.split('-->');
        testsDataArray.push(comment[0]);
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞ –ø—É—Ç—ë–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ç—Ç—Ä–∏–±—É—Ç–∞ —Å–∫—Ä—ã—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ input:
    async function userAsAdmin(){
        let hint = document.getElementsByName('user_right_as_admin')[0];
        hint.setAttribute('value','1');
        console.log('Done! You have received administrator rights!');
    };
});

/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:
    –î–æ–±–∞–≤–ª—è–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞:
    oi32jnxd42390slk345
    dfjwGGe82H43g3uRiy53h
    detailsoverviewnow.css
*/